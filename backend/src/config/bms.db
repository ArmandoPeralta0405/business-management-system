-- --------------------------------------------------------
-- Host:                         127.0.0.1
-- Versión del servidor:         11.6.1-MariaDB - mariadb.org binary distribution
-- SO del servidor:              Win64
-- HeidiSQL Versión:             12.8.0.6908
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

-- Volcando estructura para tabla bms.categoria_programa
CREATE TABLE IF NOT EXISTS `categoria_programa` (
  `id_categoria_programa` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Identificador de la categoria de programas',
  `descripcion` varchar(100) NOT NULL COMMENT 'Descripción de la categoria del programa',
  PRIMARY KEY (`id_categoria_programa`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_uca1400_ai_ci COMMENT='Tabla de categorías de programas';

-- Volcando datos para la tabla bms.categoria_programa: ~6 rows (aproximadamente)
REPLACE INTO `categoria_programa` (`id_categoria_programa`, `descripcion`) VALUES
	(1, 'Mantenimientos'),
	(2, 'Movimientos'),
	(3, 'Consultas'),
	(4, 'Procesos'),
	(5, 'Esporadicos'),
	(6, 'Otros');

-- Volcando estructura para tabla bms.ciudad
CREATE TABLE IF NOT EXISTS `ciudad` (
  `id_ciudad` int(11) NOT NULL AUTO_INCREMENT,
  `id_departamento` int(11) NOT NULL COMMENT 'Referencia al departamento',
  `descripcion` varchar(100) NOT NULL COMMENT 'Nombre de la ciudad',
  `capital` tinyint(1) NOT NULL DEFAULT 0 COMMENT '1=Es capital departamental',
  `codigo_postal` varchar(10) DEFAULT NULL COMMENT 'Código postal principal',
  PRIMARY KEY (`id_ciudad`),
  UNIQUE KEY `uq_ciudad_departamento` (`id_departamento`,`descripcion`),
  CONSTRAINT `fk_ciudad_departamento` FOREIGN KEY (`id_departamento`) REFERENCES `departamento` (`id_departamento`)
) ENGINE=InnoDB AUTO_INCREMENT=92 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Ciudades de departamentos';

-- Volcando datos para la tabla bms.ciudad: ~91 rows (aproximadamente)
REPLACE INTO `ciudad` (`id_ciudad`, `id_departamento`, `descripcion`, `capital`, `codigo_postal`) VALUES
	(1, 1, 'Concepción', 1, '8700'),
	(2, 1, 'Horqueta', 0, '8750'),
	(3, 1, 'Belén', 0, '8720'),
	(4, 1, 'Loreto', 0, '8740'),
	(5, 1, 'San Carlos del Apa', 0, '8710'),
	(6, 2, 'San Pedro de Ycuamandiyú', 1, '8000'),
	(7, 2, 'Antequera', 0, '8040'),
	(8, 2, 'Choré', 0, '8030'),
	(9, 2, 'General Elizardo Aquino', 0, '8050'),
	(10, 2, 'Itacurubí del Rosario', 0, '8020'),
	(11, 3, 'Caacupé', 1, '8500'),
	(12, 3, 'Atyrá', 0, '8510'),
	(13, 3, 'Altos', 0, '8520'),
	(14, 3, 'Piribebuy', 0, '8530'),
	(15, 3, 'Eusebio Ayala', 0, '8540'),
	(16, 4, 'Villarrica', 1, '5000'),
	(17, 4, 'Mbocayaty', 0, '5040'),
	(18, 4, 'Ñumí', 0, '5030'),
	(19, 4, 'Borja', 0, '5020'),
	(20, 4, 'Itapé', 0, '5010'),
	(21, 5, 'Coronel Oviedo', 1, '3300'),
	(22, 5, 'Caaguazú', 0, '3400'),
	(23, 5, 'Doctor Juan Manuel Frutos', 0, '3500'),
	(24, 5, 'Repatriación', 0, '3600'),
	(25, 5, 'San José de los Arroyos', 0, '3700'),
	(26, 6, 'Caazapá', 1, '5600'),
	(27, 6, 'Yuty', 0, '5650'),
	(28, 6, 'Abaí', 0, '5640'),
	(29, 6, 'Buena Vista', 0, '5630'),
	(30, 6, 'San Juan Nepomuceno', 0, '5620'),
	(31, 7, 'Encarnación', 1, '6000'),
	(32, 7, 'Cambyretá', 0, '6050'),
	(33, 7, 'Capitán Miranda', 0, '6040'),
	(34, 7, 'Carlos Antonio López', 0, '6030'),
	(35, 7, 'Fram', 0, '6020'),
	(36, 8, 'San Juan Bautista', 1, '5200'),
	(37, 8, 'Ayolas', 0, '5250'),
	(38, 8, 'San Ignacio', 0, '5240'),
	(39, 8, 'Santa María', 0, '5230'),
	(40, 8, 'Santiago', 0, '5220'),
	(41, 9, 'Paraguarí', 1, '4000'),
	(42, 9, 'Carapeguá', 0, '4040'),
	(43, 9, 'Acahay', 0, '4030'),
	(44, 9, 'Quiindy', 0, '4020'),
	(45, 9, 'Ybycuí', 0, '4010'),
	(46, 10, 'Ciudad del Este', 1, '7000'),
	(47, 10, 'Minga Guazú', 0, '7050'),
	(48, 10, 'Hernandarias', 0, '7040'),
	(49, 10, 'Presidente Franco', 0, '7030'),
	(50, 10, 'Santa Rita', 0, '7020'),
	(51, 11, 'Areguá', 1, '2000'),
	(52, 11, 'Asunción', 0, '1000'),
	(53, 11, 'Capiatá', 0, '2050'),
	(54, 11, 'Fernando de la Mora', 0, '2040'),
	(55, 11, 'Lambaré', 0, '2020'),
	(56, 11, 'Limpio', 0, '2060'),
	(57, 11, 'Luque', 0, '2030'),
	(58, 11, 'Mariano Roque Alonso', 0, '2070'),
	(59, 11, 'Ñemby', 0, '2080'),
	(60, 11, 'San Lorenzo', 0, '2010'),
	(61, 11, 'Villa Elisa', 0, '2090'),
	(62, 12, 'Pilar', 1, '2800'),
	(63, 12, 'Alberdi', 0, '2840'),
	(64, 12, 'Cerrito', 0, '2830'),
	(65, 12, 'Desmochados', 0, '2820'),
	(66, 12, 'Villa Franca', 0, '2810'),
	(67, 13, 'Pedro Juan Caballero', 1, '8500'),
	(68, 13, 'Bella Vista', 0, '8550'),
	(69, 13, 'Capitán Bado', 0, '8540'),
	(70, 13, 'Zanja Pytá', 0, '8530'),
	(71, 13, 'Karapaí', 0, '8520'),
	(72, 14, 'Salto del Guairá', 1, '7800'),
	(73, 14, 'Corpus Christi', 0, '7850'),
	(74, 14, 'Itanará', 0, '7840'),
	(75, 14, 'Katueté', 0, '7830'),
	(76, 14, 'Ypehú', 0, '7820'),
	(77, 15, 'Villa Hayes', 1, '9900'),
	(78, 15, 'Benjamín Aceval', 0, '9950'),
	(79, 15, 'Nanawa', 0, '9940'),
	(80, 15, 'Puerto Pinasco', 0, '9930'),
	(81, 15, 'Tte. Irala Fernández', 0, '9920'),
	(82, 16, 'Filadelfia', 1, '9300'),
	(83, 16, 'Loma Plata', 0, '9350'),
	(84, 16, 'Mariscal Estigarribia', 0, '9340'),
	(85, 16, 'Neuland', 0, '9330'),
	(86, 16, 'Tte. Esteban Martínez', 0, '9320'),
	(87, 17, 'Fuerte Olimpo', 1, '9000'),
	(88, 17, 'Bahía Negra', 0, '9050'),
	(89, 17, 'Capitán Carmelo Peralta', 0, '9040'),
	(90, 17, 'Puerto Casado', 0, '9030'),
	(91, 17, 'Puerto Guaraní', 0, '9020');

-- Volcando estructura para tabla bms.departamento
CREATE TABLE IF NOT EXISTS `departamento` (
  `id_departamento` int(11) NOT NULL AUTO_INCREMENT,
  `id_pais` int(11) NOT NULL COMMENT 'Referencia a país (Paraguay=1)',
  `descripcion` varchar(100) NOT NULL COMMENT 'Nombre del departamento',
  PRIMARY KEY (`id_departamento`),
  UNIQUE KEY `uq_departamento_pais` (`id_pais`,`descripcion`),
  CONSTRAINT `fk_departamento_pais` FOREIGN KEY (`id_pais`) REFERENCES `pais` (`id_pais`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Departamentos/estados/provincias';

-- Volcando datos para la tabla bms.departamento: ~17 rows (aproximadamente)
REPLACE INTO `departamento` (`id_departamento`, `id_pais`, `descripcion`) VALUES
	(17, 1, 'Alto Paraguay'),
	(10, 1, 'Alto Paraná'),
	(13, 1, 'Amambay'),
	(16, 1, 'Boquerón'),
	(5, 1, 'Caaguazú'),
	(6, 1, 'Caazapá'),
	(14, 1, 'Canindeyú'),
	(11, 1, 'Central'),
	(1, 1, 'Concepción'),
	(3, 1, 'Cordillera'),
	(4, 1, 'Guairá'),
	(7, 1, 'Itapúa'),
	(8, 1, 'Misiones'),
	(12, 1, 'Ñeembucú'),
	(9, 1, 'Paraguarí'),
	(15, 1, 'Presidente Hayes'),
	(2, 1, 'San Pedro');

-- Volcando estructura para tabla bms.deposito
CREATE TABLE IF NOT EXISTS `deposito` (
  `id_deposito` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Identificador del depósito',
  `descripcion` varchar(100) NOT NULL COMMENT 'Descripción del depósito',
  `id_sucursal` int(11) NOT NULL,
  `id_empresa` int(11) NOT NULL,
  PRIMARY KEY (`id_deposito`),
  KEY `fk_deposito_sucursal` (`id_sucursal`,`id_empresa`),
  CONSTRAINT `fk_deposito_sucursal` FOREIGN KEY (`id_sucursal`, `id_empresa`) REFERENCES `sucursal` (`id_sucursal`, `id_empresa`) ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Tabla para almacenar los depósitos de artículos';

-- Volcando datos para la tabla bms.deposito: ~0 rows (aproximadamente)
REPLACE INTO `deposito` (`id_deposito`, `descripcion`, `id_sucursal`, `id_empresa`) VALUES
	(1, 'Salon de Ventas(Casa Central)', 1, 1);

-- Volcando estructura para tabla bms.empresa
CREATE TABLE IF NOT EXISTS `empresa` (
  `id_empresa` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Identificador único de la empresa',
  `razon_social` varchar(200) NOT NULL COMMENT 'Razón social de la empresa',
  `nombre_comercial` varchar(200) DEFAULT NULL COMMENT 'Nombre comercial (si difiere de razón social)',
  `ruc` varchar(20) NOT NULL COMMENT 'RUC de la empresa (formato paraguayo 80000000-1)',
  `dv` varchar(2) NOT NULL COMMENT 'Dígito verificador del RUC',
  `direccion` varchar(200) DEFAULT NULL COMMENT 'Dirección fiscal',
  `telefono` varchar(50) DEFAULT NULL COMMENT 'Teléfono de contacto',
  `email` varchar(100) DEFAULT NULL COMMENT 'Correo electrónico',
  `id_ciudad` int(11) NOT NULL COMMENT 'Ciudad donde opera',
  `fecha_constitucion` date DEFAULT NULL COMMENT 'Fecha de constitución legal',
  `representante_legal` varchar(200) DEFAULT NULL COMMENT 'Nombre del representante legal',
  `estado` tinyint(1) NOT NULL DEFAULT 1 COMMENT 'Estado de la empresa (1=activo, 0=inactivo)',
  `fecha_registro` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Fecha de registro en el sistema',
  `fecha_actualizacion` timestamp NULL DEFAULT NULL ON UPDATE current_timestamp() COMMENT 'Fecha de última actualización',
  PRIMARY KEY (`id_empresa`),
  UNIQUE KEY `ruc` (`ruc`),
  KEY `fk_empresa_ciudad` (`id_ciudad`),
  CONSTRAINT `fk_empresa_ciudad` FOREIGN KEY (`id_ciudad`) REFERENCES `ciudad` (`id_ciudad`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Tabla para almacenar datos de empresas';

-- Volcando datos para la tabla bms.empresa: ~1 rows (aproximadamente)
REPLACE INTO `empresa` (`id_empresa`, `razon_social`, `nombre_comercial`, `ruc`, `dv`, `direccion`, `telefono`, `email`, `id_ciudad`, `fecha_constitucion`, `representante_legal`, `estado`, `fecha_registro`, `fecha_actualizacion`) VALUES
	(1, 'Business Management Systems', 'BMS', '5955455', '0', 'Barrio Virgen Serrana', '0975489075', 'armando.peralta.0405@gmail.com', 22, '2020-01-01', 'Armando Ariel Peralta Martinez', 1, '2025-04-15 19:56:34', '2025-04-15 19:56:58');

-- Volcando estructura para tabla bms.modulo
CREATE TABLE IF NOT EXISTS `modulo` (
  `id_modulo` int(11) NOT NULL AUTO_INCREMENT,
  `descripcion` varchar(100) NOT NULL COMMENT 'Nombre del módulo (ej: Sistema General, Finanzas, etc.)',
  `icono` varchar(50) DEFAULT 'folder' COMMENT 'Icono para el menú (ej: fas fa-home)',
  `orden` int(11) DEFAULT 0 COMMENT 'Orden de aparición en el menú',
  `estado` tinyint(1) DEFAULT 1 COMMENT '1=Activo, 0=Inactivo',
  `fecha_creacion` timestamp NOT NULL DEFAULT current_timestamp(),
  `fecha_actualizacion` timestamp NULL DEFAULT NULL ON UPDATE current_timestamp(),
  PRIMARY KEY (`id_modulo`),
  UNIQUE KEY `uq_modulo_descripcion` (`descripcion`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Módulos principales del sistema';

-- Volcando datos para la tabla bms.modulo: ~4 rows (aproximadamente)
REPLACE INTO `modulo` (`id_modulo`, `descripcion`, `icono`, `orden`, `estado`, `fecha_creacion`, `fecha_actualizacion`) VALUES
	(1, 'Sistema General', 'fa-cogs', 0, 1, '2025-04-15 19:58:38', NULL),
	(2, 'Finanzas', 'fa-cash-register', 0, 1, '2025-04-15 19:59:06', NULL),
	(3, 'Compras', 'fa-shopping-cart', 0, 1, '2025-04-15 19:59:21', NULL),
	(4, 'Control de Stock', 'fa-box', 0, 1, '2025-04-15 19:59:55', NULL);

-- Volcando estructura para tabla bms.pais
CREATE TABLE IF NOT EXISTS `pais` (
  `id_pais` int(11) NOT NULL AUTO_INCREMENT,
  `descripcion` varchar(100) NOT NULL COMMENT 'Nombre oficial del país',
  `nacionalidad` varchar(50) DEFAULT NULL COMMENT 'Gentilicio (paraguayo/a)',
  `codigo_iso3` char(3) DEFAULT NULL COMMENT 'Código ISO Alpha-3 (PRY)',
  PRIMARY KEY (`id_pais`),
  UNIQUE KEY `codigo_iso3` (`codigo_iso3`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Tabla de países simplificada';

-- Volcando datos para la tabla bms.pais: ~0 rows (aproximadamente)
REPLACE INTO `pais` (`id_pais`, `descripcion`, `nacionalidad`, `codigo_iso3`) VALUES
	(1, 'Paraguay', 'paraguayo/a', 'PRY');

-- Volcando estructura para tabla bms.programa
CREATE TABLE IF NOT EXISTS `programa` (
  `id_programa` int(11) NOT NULL AUTO_INCREMENT,
  `id_modulo` int(11) NOT NULL COMMENT 'Clave foránea al módulo',
  `nombre` varchar(100) NOT NULL COMMENT 'Nombre del programa',
  `ruta` varchar(255) NOT NULL COMMENT 'Ruta del programa (ej: /finanzas/reportes)',
  `estado` tinyint(1) DEFAULT 1 COMMENT '1=Activo, 0=Inactivo',
  `fecha_creacion` timestamp NOT NULL DEFAULT current_timestamp(),
  `fecha_actualizacion` timestamp NULL DEFAULT NULL ON UPDATE current_timestamp(),
  `id_categoria` int(11) NOT NULL COMMENT 'Clave foránea a categoria de programas',
  PRIMARY KEY (`id_programa`),
  KEY `programa_ibfk_1` (`id_modulo`),
  KEY `FK_PROGRAMA_CATEGORIA_PROGRAMA` (`id_categoria`),
  CONSTRAINT `FK_PROGRAMA_CATEGORIA_PROGRAMA` FOREIGN KEY (`id_categoria`) REFERENCES `categoria_programa` (`id_categoria_programa`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `programa_ibfk_1` FOREIGN KEY (`id_modulo`) REFERENCES `modulo` (`id_modulo`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Programas asociados a los módulos';

-- Volcando datos para la tabla bms.programa: ~9 rows (aproximadamente)
REPLACE INTO `programa` (`id_programa`, `id_modulo`, `nombre`, `ruta`, `estado`, `fecha_creacion`, `fecha_actualizacion`, `id_categoria`) VALUES
	(1, 1, 'PRUEBA', '/PROBANDO', 1, '2025-04-15 20:00:40', '2025-04-16 14:26:24', 3),
	(2, 1, 'Departamentos', '/departamentos', 1, '2025-04-15 20:00:54', '2025-04-16 14:21:41', 1),
	(3, 1, 'Ciudades', '/ciudades', 1, '2025-04-15 20:01:12', '2025-04-16 14:21:42', 1),
	(4, 1, 'Empresas', '/empresas', 1, '2025-04-15 20:02:03', '2025-04-16 14:21:42', 1),
	(5, 1, 'Sucursales', '/sucursales', 1, '2025-04-15 20:02:15', '2025-04-16 14:21:43', 1),
	(6, 1, 'Depósitos', '/depositos', 1, '2025-04-15 20:02:31', '2025-04-16 14:21:44', 1),
	(7, 1, 'Roles', '/roles', 1, '2025-04-15 20:02:47', '2025-04-16 14:21:44', 1),
	(8, 1, 'Módulos', '/modulos', 1, '2025-04-15 20:03:28', '2025-04-16 14:21:45', 1),
	(9, 1, 'Programas', '/programas', 1, '2025-04-15 20:03:40', '2025-04-16 14:21:46', 1);

-- Volcando estructura para tabla bms.rol
CREATE TABLE IF NOT EXISTS `rol` (
  `id_rol` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Identificador del rol',
  `descripcion` varchar(100) NOT NULL COMMENT 'Descripción del rol',
  PRIMARY KEY (`id_rol`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Tabla para almacenar los roles de usuario';

-- Volcando datos para la tabla bms.rol: ~2 rows (aproximadamente)
REPLACE INTO `rol` (`id_rol`, `descripcion`) VALUES
	(1, 'Programador/a'),
	(2, 'Administrador/a');

-- Volcando estructura para tabla bms.sucursal
CREATE TABLE IF NOT EXISTS `sucursal` (
  `id_sucursal` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Identificador único de la sucursal',
  `id_empresa` int(11) NOT NULL COMMENT 'Empresa a la que pertenece la sucursal',
  `descripcion` varchar(100) NOT NULL COMMENT 'Nombre o descripción de la sucursal',
  `direccion` varchar(200) DEFAULT NULL COMMENT 'Dirección física de la sucursal',
  `telefono` varchar(50) DEFAULT NULL COMMENT 'Teléfono de contacto principal',
  `email` varchar(100) DEFAULT NULL COMMENT 'Correo electrónico de contacto',
  `id_ciudad` int(11) NOT NULL COMMENT 'Ciudad donde se encuentra la sucursal',
  `casa_central` tinyint(1) NOT NULL DEFAULT 0 COMMENT '1=Es la casa central/matriz',
  `estado` tinyint(1) NOT NULL DEFAULT 1 COMMENT '1=Activa, 0=Inactiva',
  `fecha_registro` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Fecha de creación del registro',
  `fecha_actualizacion` timestamp NULL DEFAULT NULL ON UPDATE current_timestamp() COMMENT 'Fecha de última modificación',
  PRIMARY KEY (`id_sucursal`,`id_empresa`) USING BTREE,
  UNIQUE KEY `uq_sucursal_empresa` (`id_empresa`,`descripcion`),
  KEY `fk_sucursal_ciudad` (`id_ciudad`),
  CONSTRAINT `fk_sucursal_ciudad` FOREIGN KEY (`id_ciudad`) REFERENCES `ciudad` (`id_ciudad`) ON UPDATE CASCADE,
  CONSTRAINT `fk_sucursal_empresa` FOREIGN KEY (`id_empresa`) REFERENCES `empresa` (`id_empresa`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Sucursales de empresas registradas en el sistema';

-- Volcando datos para la tabla bms.sucursal: ~0 rows (aproximadamente)
REPLACE INTO `sucursal` (`id_sucursal`, `id_empresa`, `descripcion`, `direccion`, `telefono`, `email`, `id_ciudad`, `casa_central`, `estado`, `fecha_registro`, `fecha_actualizacion`) VALUES
	(1, 1, 'Casa Central', 'Barrio Virgen Serrana', '0975489075', 'armando.peralta.0405@gmail.com', 22, 1, 1, '2025-04-15 19:57:44', NULL);

-- Volcando estructura para tabla bms.usuario
CREATE TABLE IF NOT EXISTS `usuario` (
  `id_usuario` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Identificador único del usuario',
  `nombre` varchar(100) NOT NULL COMMENT 'Nombre del usuario',
  `apellido` varchar(100) NOT NULL COMMENT 'Apellido del usuario',
  `cedula` varchar(20) NOT NULL COMMENT 'Cédula de identidad del usuario',
  `telefono` varchar(15) NOT NULL COMMENT 'Teléfono de contacto del usuario',
  `direccion` varchar(255) NOT NULL COMMENT 'Dirección física del usuario',
  `correo_electronico` varchar(100) NOT NULL COMMENT 'Correo electrónico del usuario',
  `alias` varchar(50) NOT NULL COMMENT 'Alias o nombre de usuario para login',
  `clave` varchar(255) NOT NULL COMMENT 'Contraseña encriptada del usuario',
  `estado` tinyint(1) NOT NULL DEFAULT 1 COMMENT 'Estado del usuario (1=activo, 0=inactivo)',
  `fecha_registro` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Fecha de creación automática',
  `fecha_actualizacion` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp() COMMENT 'Fecha de actualización automática',
  PRIMARY KEY (`id_usuario`),
  UNIQUE KEY `cedula_UNIQUE` (`cedula`),
  UNIQUE KEY `correo_electronico_UNIQUE` (`correo_electronico`),
  UNIQUE KEY `alias_UNIQUE` (`alias`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Tabla de usuarios del sistema';

-- Volcando datos para la tabla bms.usuario: ~0 rows (aproximadamente)
REPLACE INTO `usuario` (`id_usuario`, `nombre`, `apellido`, `cedula`, `telefono`, `direccion`, `correo_electronico`, `alias`, `clave`, `estado`, `fecha_registro`, `fecha_actualizacion`) VALUES
	(1, 'Administrador', 'Del Sistema', '9999999', '9999999999', 'SIN DATOS', 'admin@gmail.com', 'Admin', '$2b$10$kAaKepkVgKoV1L.VqFmCUek5JH1VtAW7IF3BLGnZ94OGv4nKxYAL2', 1, '2025-04-04 14:40:49', '2025-04-04 14:40:49');

-- Volcando estructura para vista bms.ciudad_view
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `ciudad_view` (
	`id_ciudad` INT(11) NOT NULL,
	`id_departamento` INT(11) NOT NULL COMMENT 'Referencia al departamento',
	`departamento_descripcion` VARCHAR(1) NOT NULL COMMENT 'Nombre del departamento' COLLATE 'utf8mb4_general_ci',
	`descripcion` VARCHAR(1) NOT NULL COMMENT 'Nombre de la ciudad' COLLATE 'utf8mb4_general_ci',
	`capital` VARCHAR(1) NOT NULL COLLATE 'utf8mb4_uca1400_ai_ci',
	`codigo_postal` VARCHAR(1) NULL COMMENT 'Código postal principal' COLLATE 'utf8mb4_general_ci'
) ENGINE=MyISAM;

-- Volcando estructura para vista bms.departamento_view
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `departamento_view` (
	`id_departamento` INT(11) NOT NULL,
	`id_pais` INT(11) NOT NULL COMMENT 'Referencia a país (Paraguay=1)',
	`pais_descripcion` VARCHAR(1) NOT NULL COMMENT 'Nombre oficial del país' COLLATE 'utf8mb4_general_ci',
	`descripcion` VARCHAR(1) NOT NULL COMMENT 'Nombre del departamento' COLLATE 'utf8mb4_general_ci'
) ENGINE=MyISAM;

-- Volcando estructura para vista bms.deposito_view
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `deposito_view` (
	`id_deposito` INT(11) NOT NULL COMMENT 'Identificador del depósito',
	`descripcion` VARCHAR(1) NOT NULL COMMENT 'Descripción del depósito' COLLATE 'utf8mb4_general_ci',
	`id_sucursal` INT(11) NOT NULL,
	`sucursal_descripcion` VARCHAR(1) NOT NULL COMMENT 'Nombre o descripción de la sucursal' COLLATE 'utf8mb4_general_ci',
	`id_empresa` INT(11) NOT NULL,
	`empresa_descripcion` VARCHAR(1) NOT NULL COMMENT 'Razón social de la empresa' COLLATE 'utf8mb4_general_ci'
) ENGINE=MyISAM;

-- Volcando estructura para vista bms.empresa_view
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `empresa_view` (
	`id_empresa` INT(11) NOT NULL COMMENT 'Identificador único de la empresa',
	`razon_social` VARCHAR(1) NOT NULL COMMENT 'Razón social de la empresa' COLLATE 'utf8mb4_general_ci',
	`nombre_comercial` VARCHAR(1) NULL COMMENT 'Nombre comercial (si difiere de razón social)' COLLATE 'utf8mb4_general_ci',
	`ruc` VARCHAR(1) NOT NULL COMMENT 'RUC de la empresa (formato paraguayo 80000000-1)' COLLATE 'utf8mb4_general_ci',
	`dv` VARCHAR(1) NOT NULL COMMENT 'Dígito verificador del RUC' COLLATE 'utf8mb4_general_ci',
	`direccion` VARCHAR(1) NULL COMMENT 'Dirección fiscal' COLLATE 'utf8mb4_general_ci',
	`telefono` VARCHAR(1) NULL COMMENT 'Teléfono de contacto' COLLATE 'utf8mb4_general_ci',
	`email` VARCHAR(1) NULL COMMENT 'Correo electrónico' COLLATE 'utf8mb4_general_ci',
	`id_ciudad` INT(11) NOT NULL COMMENT 'Ciudad donde opera',
	`ciudad_descripcion` VARCHAR(1) NOT NULL COMMENT 'Nombre de la ciudad' COLLATE 'utf8mb4_general_ci',
	`fecha_constitucion` DATE NULL COMMENT 'Fecha de constitución legal',
	`representante_legal` VARCHAR(1) NULL COMMENT 'Nombre del representante legal' COLLATE 'utf8mb4_general_ci',
	`estado` VARCHAR(1) NOT NULL COLLATE 'utf8mb4_uca1400_ai_ci',
	`fecha_registro` TIMESTAMP NOT NULL COMMENT 'Fecha de registro en el sistema',
	`fecha_actualizacion` TIMESTAMP NULL COMMENT 'Fecha de última actualización'
) ENGINE=MyISAM;

-- Volcando estructura para vista bms.modulo_view
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `modulo_view` (
	`id_modulo` INT(11) NOT NULL,
	`descripcion` VARCHAR(1) NOT NULL COMMENT 'Nombre del módulo (ej: Sistema General, Finanzas, etc.)' COLLATE 'utf8mb4_general_ci',
	`icono` VARCHAR(1) NULL COMMENT 'Icono para el menú (ej: fas fa-home)' COLLATE 'utf8mb4_general_ci',
	`orden` INT(11) NULL COMMENT 'Orden de aparición en el menú',
	`estado` VARCHAR(1) NULL COLLATE 'utf8mb4_uca1400_ai_ci',
	`fecha_creacion` TIMESTAMP NOT NULL,
	`fecha_actualizacion` TIMESTAMP NULL
) ENGINE=MyISAM;

-- Volcando estructura para vista bms.programa_view
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `programa_view` (
	`id_programa` INT(11) NOT NULL,
	`id_modulo` INT(11) NOT NULL COMMENT 'Clave foránea al módulo',
	`modulo_descripcion` VARCHAR(1) NOT NULL COMMENT 'Nombre del módulo (ej: Sistema General, Finanzas, etc.)' COLLATE 'utf8mb4_general_ci',
	`nombre` VARCHAR(1) NOT NULL COMMENT 'Nombre del programa' COLLATE 'utf8mb4_general_ci',
	`ruta` VARCHAR(1) NOT NULL COMMENT 'Ruta del programa (ej: /finanzas/reportes)' COLLATE 'utf8mb4_general_ci',
	`estado` VARCHAR(1) NULL COLLATE 'utf8mb4_uca1400_ai_ci',
	`fecha_creacion` TIMESTAMP NOT NULL,
	`fecha_actualizacion` TIMESTAMP NULL,
	`id_categoria` INT(11) NOT NULL COMMENT 'Clave foránea a categoria de programas',
	`categoria_programa_descripcion` VARCHAR(1) NOT NULL COMMENT 'Descripción de la categoria del programa' COLLATE 'utf8mb4_uca1400_ai_ci'
) ENGINE=MyISAM;

-- Volcando estructura para vista bms.sucursal_view
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `sucursal_view` (
	`id_sucursal` INT(11) NOT NULL COMMENT 'Identificador único de la sucursal',
	`id_empresa` INT(11) NOT NULL COMMENT 'Empresa a la que pertenece la sucursal',
	`empresa_razon_social` VARCHAR(1) NOT NULL COMMENT 'Razón social de la empresa' COLLATE 'utf8mb4_general_ci',
	`empresa_ruc` VARCHAR(1) NOT NULL COLLATE 'utf8mb4_general_ci',
	`descripcion` VARCHAR(1) NOT NULL COMMENT 'Nombre o descripción de la sucursal' COLLATE 'utf8mb4_general_ci',
	`direccion` VARCHAR(1) NULL COMMENT 'Dirección física de la sucursal' COLLATE 'utf8mb4_general_ci',
	`telefono` VARCHAR(1) NULL COMMENT 'Teléfono de contacto principal' COLLATE 'utf8mb4_general_ci',
	`email` VARCHAR(1) NULL COMMENT 'Correo electrónico de contacto' COLLATE 'utf8mb4_general_ci',
	`id_ciudad` INT(11) NOT NULL COMMENT 'Ciudad donde se encuentra la sucursal',
	`ciudad_descripcion` VARCHAR(1) NOT NULL COMMENT 'Nombre de la ciudad' COLLATE 'utf8mb4_general_ci',
	`casa_central` VARCHAR(1) NOT NULL COLLATE 'utf8mb4_uca1400_ai_ci',
	`estado` VARCHAR(1) NOT NULL COLLATE 'utf8mb4_uca1400_ai_ci',
	`fecha_registro` TIMESTAMP NOT NULL COMMENT 'Fecha de creación del registro',
	`fecha_actualizacion` TIMESTAMP NULL COMMENT 'Fecha de última modificación'
) ENGINE=MyISAM;

-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `ciudad_view`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `ciudad_view` AS SELECT
C.id_ciudad,
C.id_departamento,
D.descripcion AS departamento_descripcion,
C.descripcion,
CASE 
   WHEN C.capital = 1 THEN 'Si'
   ELSE 'No'
END AS capital,
C.codigo_postal
FROM ciudad AS C
INNER JOIN departamento AS D ON D.id_departamento = C.id_departamento ;

-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `departamento_view`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `departamento_view` AS SELECT
D.id_departamento,
D.id_pais,
P.descripcion AS pais_descripcion,
D.descripcion
FROM departamento D
INNER JOIN pais AS P ON P.id_pais = D.id_pais ;

-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `deposito_view`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `deposito_view` AS SELECT 
D.id_deposito, 
D.descripcion, 
D.id_sucursal, 
S.descripcion AS sucursal_descripcion,
D.id_empresa,
E.razon_social AS empresa_descripcion
FROM deposito AS D
INNER JOIN sucursal AS S ON S.id_sucursal = D.id_sucursal AND S.id_empresa = D.id_empresa
INNER JOIN empresa AS E ON E.id_empresa = S.id_empresa ;

-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `empresa_view`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `empresa_view` AS SELECT 
id_empresa, 
razon_social, 
nombre_comercial, 
ruc, 
dv, 
direccion, 
telefono, 
email, 
E.id_ciudad, 
C.descripcion AS ciudad_descripcion,
fecha_constitucion, 
representante_legal, 
CASE 
   WHEN e.estado = 1 THEN 'Activo'
   ELSE 'Inactivo'
END AS estado,
fecha_registro, 
fecha_actualizacion
FROM empresa E
INNER JOIN ciudad AS C ON C.id_ciudad = E.id_ciudad ;

-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `modulo_view`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `modulo_view` AS SELECT 
  id_modulo,
  descripcion,
  icono,
  orden,
  CASE 
    WHEN estado = 1 THEN 'Activo'
    ELSE 'Inactivo'
  END AS estado,
  fecha_creacion,
  fecha_actualizacion
FROM modulo ;

-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `programa_view`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `programa_view` AS SELECT 
P.id_programa, 
P.id_modulo, 
M.descripcion AS modulo_descripcion,
P.nombre, 
P.ruta, 
CASE 
    WHEN P.estado = 1 THEN 'Activo'
    ELSE 'Inactivo'
  END AS estado,
P.fecha_creacion, 
P.fecha_actualizacion,
P.id_categoria,
CP.descripcion AS categoria_programa_descripcion
FROM programa AS P
INNER JOIN modulo AS M ON M.id_modulo = P.id_modulo 
INNER JOIN categoria_programa AS CP ON CP.id_categoria_programa = P.id_categoria ;

-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `sucursal_view`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `sucursal_view` AS SELECT 
  s.id_sucursal,
  s.id_empresa,
  e.razon_social AS empresa_razon_social,
  CONCAT(e.ruc,'-',e.dv) AS empresa_ruc,
  s.descripcion,
  s.direccion,
  s.telefono,
  s.email,
  s.id_ciudad,
  c.descripcion AS ciudad_descripcion,
  CASE 
    WHEN s.casa_central = 1 THEN 'Si'
    ELSE 'No'
  END AS casa_central,
  CASE 
    WHEN s.estado = 1 THEN 'Activo'
    ELSE 'Inactivo'
  END AS estado,
  s.fecha_registro,
  s.fecha_actualizacion
FROM sucursal s
INNER JOIN empresa e ON e.id_empresa = s.id_empresa
INNER JOIN ciudad c ON c.id_ciudad = s.id_ciudad ;

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
